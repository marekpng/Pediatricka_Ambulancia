version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: clinic_db
      MYSQL_USER: user
      MYSQL_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - backend

  #  IdentifyService
  identify_service:
    build: ./docker/php
    container_name: identify_service_container
    restart: always
    volumes:
      - ./IdentifyService:/var/www/identify-service
    working_dir: /var/www/identify-service
    command: php artisan serve --host=0.0.0.0 --port=8080
    depends_on:
      - mysql
    networks:
      - backend
    ports:
      - "8080:8080"

  #  ReservationService
  reservation_service:
    build: ./docker/php
    container_name: reservation_service_container
    restart: always
    volumes:
      - ./ReservationService:/var/www/reservation-service
    working_dir: /var/www/reservation-service
    command: php artisan serve --host=0.0.0.0 --port=8081
    depends_on:
      - mysql
    networks:
      - backend
    ports:
      - "8081:8081"
  #  Content Service
  content_service:
    build: ./docker/php
    container_name: content_service_container
    restart: always
    volumes:
      - ./ContentService:/var/www/content-service
    working_dir: /var/www/content-service
    command: php artisan serve --host=0.0.0.0 --port=8082
    depends_on:
      - mysql
    networks:
      - backend
    ports:
      - "8082:8082"

  email_service:
    build: ./docker/php
    container_name: email_service_container
    restart: always
    volumes:
      - ./EmailService:/var/www/email-service
    working_dir: /var/www/email-service
    command: php artisan serve --host=0.0.0.0 --port=8000
    depends_on:
      - mysql
    networks:
      - backend
    ports:
      - "8000:8000"


  # Nginx Service (Reverse Proxy)
  nginx:
    image: nginx:latest
    container_name: nginx_container
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - identify_service
      - reservation_service
      - email_service
      - content_service
    networks:
      - backend

    # Mailpit Service for Email Testing
  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit_container
    restart: always
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web interface
    networks:
      - backend

  frontend:
    build:
      context: ./frontend/pediatricka_ambulancia
    container_name: frontend_container
    volumes:
      - ./frontend/pediatricka_ambulancia:/app
      - /app/node_modules
    restart: always
    ports:
      - "5173:5173"
    depends_on:
      - nginx
    networks:
      - backend

volumes:
  mysql_data:

networks:
  backend:
